{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["export const getNetworkType = () => new Promise(resolve => {\n  const ua = navigator.userAgent;\n  let networkStr = ua.match(/NetType\\/\\w+/) ? ua.match(/NetType\\/\\w+/)[0] : 'NetType/other';\n  networkStr = networkStr.toLowerCase().replace('nettype/', '');\n  let networkType;\n\n  switch (networkStr) {\n    case 'wifi':\n      networkType = 'wifi';\n      break;\n\n    case '4g':\n      networkType = '4g';\n      break;\n\n    case '3g' || '3gnet':\n      networkType = '3g';\n      break;\n\n    case '2g':\n      networkType = '2g';\n      break;\n\n    default:\n      networkType = 'other';\n  }\n\n  resolve({\n    networkType\n  });\n});\nexport default getNetworkType;"],"names":["getNetworkType","Promise","resolve","ua","navigator","userAgent","networkStr","match","toLowerCase","replace","networkType"],"mappings":";;;;MAAaA,cAAc,GAAG,MAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAI;QACnDC,EAAE,GAAGC,SAAS,CAACC,SAArB;MACIC,UAAU,GAAGH,EAAE,CAACI,KAAH,CAAS,cAAT,IAA2BJ,EAAE,CAACI,KAAH,CAAS,cAAT,EAAyB,CAAzB,CAA3B,GAAyD,eAA1E;EACAD,UAAU,GAAGA,UAAU,CAACE,WAAX,GAAyBC,OAAzB,CAAiC,UAAjC,EAA6C,EAA7C,CAAb;MACIC,WAAJ;;UAEQJ,UAAR;SACO,MAAL;MACEI,WAAW,GAAG,MAAd;;;SAGG,IAAL;MACEA,WAAW,GAAG,IAAd;;;SAGG,KAAL;MACEA,WAAW,GAAG,IAAd;;;SAGG,IAAL;MACEA,WAAW,GAAG,IAAd;;;;MAIAA,WAAW,GAAG,OAAd;;;EAGJR,OAAO,CAAC;IACNQ;GADK,CAAP;CA3BkC,CAA7B;;;;;"}