{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["/*\r\n  config数据结构\r\n    options\r\n      type：GET POST PUT DELETE ...\r\n      url：请求uri，不包含baseUrl\r\n    data： request body 数据\r\n    params： request url 参数，json格式\r\n    headers： request headers\r\n    timeout： 超时，单位ms -- 只支持部分平台，其他平台在配置里\r\n    setting： 其他配置\r\n\r\n  response数据结构\r\n    config：详见上\r\n    status：http 状态码\r\n    data：接口返回数据\r\n\r\n  error数据结构，reject\r\n    message：错误信息\r\n    response：详见上\r\n*/\nimport global from '@hupo/core-global';\nimport { addUrlParam } from '@hupo/core-url';\nimport { promise } from '@hupo/core-promise';\nglobal._request = {};\nexport const initialize = baseUrl => {\n  console.log('baseUrl', baseUrl);\n  global._request.baseUrl = baseUrl;\n}; // 默认配置\n\nexport const defaultConfig = () => {\n  return {\n    timeout: 15000,\n    // request timeout\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  };\n}; // 格式化config\n\nexport const formatParams = params => {\n  const _params = {};\n  Object.keys(params).forEach(key => {\n    const item = params[key];\n    const type = Object.prototype.toString.call(item);\n\n    if (type.indexOf('Array') > -1) {\n      _params[key] = item.join(',');\n    }\n\n    _params[key] = encodeURIComponent(type.indexOf('Object') > -1 ? JSON.stringify(item) : item);\n  });\n  return addUrlParam(_params);\n}; // 获取请求唯一id// 获取请求唯一id\n\nexport const getRequestIdentify = config => {\n  return encodeURIComponent(JSON.stringify(config));\n}; // 缓存正在请求的接口\n\nexport const pendding = config => new Promise((resolve, reject) => {\n  if (!global._request.pendding) global._request.pendding = {};\n  const id = getRequestIdentify(config);\n\n  if (global._request.pendding[id]) {\n    // 重复请求\n    reject(promise.createError({\n      message: 'abort',\n      info: 'repeat request',\n      response: null\n    }));\n  } else {\n    global._request.pendding[id] = 1;\n    resolve();\n  }\n}); // 结束正在请求的接口\n\nexport const removePending = config => {\n  const id = getRequestIdentify(config);\n  delete global._request.pendding[id];\n}; // 请求完成处理\n\nexport const filterResponse = response => {\n  console.groupCollapsed(`%cresponse debug: %c${response.config.options.url}`, 'color: #999', 'color: #0076ff');\n  console.log(response.config);\n  console.log(response.data);\n  console.groupEnd();\n  return response;\n}; // 通用异常处理\n\nexport const filterError = response => new Promise((resolve, reject) => {\n  let message = '';\n\n  switch (response.status) {\n    case 400:\n      message = '请求错误';\n      break;\n\n    case 401:\n      message = '未授权，请登录';\n      break;\n\n    case 403:\n      message = '拒绝访问';\n      break;\n\n    case 404:\n      message = `请求地址出错: ${response.config.options.url}`;\n      break;\n\n    case 408:\n      message = '请求超时';\n      break;\n\n    case 500:\n      message = '服务器内部错误';\n      break;\n\n    case 501:\n      message = '服务未实现';\n      break;\n\n    case 502:\n      message = '网关错误';\n      break;\n\n    case 503:\n      message = '服务不可用';\n      break;\n\n    case 504:\n      message = '网关超时';\n      break;\n\n    case 505:\n      message = 'HTTP版本不受支持';\n      break;\n\n    default:\n      break;\n  }\n\n  if (response.status !== 200 && !message) {\n    message = '系统繁忙，请稍后再试';\n  }\n\n  if (message) {\n    reject(promise.createError({\n      message,\n      response\n    }));\n  } else {\n    resolve();\n  }\n});\nexport const complete = response => new Promise((resolve, reject) => {\n  const {\n    data = {}\n  } = response;\n  const {\n    code\n  } = data;\n\n  if (code === undefined) {\n    // 如果没有 code 代表这不是业务接口 比如获取配置\n    resolve(data);\n  } else {\n    // 有 code 代表这是一个后端接口 可以进行进一步的判断\n    switch (code) {\n      case 0:\n        // [ 示例 ] code === 0 代表没有错误\n        resolve(data.data);\n        break;\n\n      case -1:\n        {\n          const error = {\n            message: '系统错误',\n            response\n          };\n          reject(promise.createError(error));\n          break;\n        }\n\n      default:\n        {\n          const defaultError = {\n            message: data.msg,\n            response\n          };\n          reject(promise.createError(defaultError));\n          break;\n        }\n    }\n  }\n});"],"names":["global","_request","initialize","baseUrl","console","log","defaultConfig","timeout","headers","formatParams","params","_params","Object","keys","forEach","key","item","type","prototype","toString","call","indexOf","join","encodeURIComponent","JSON","stringify","addUrlParam","getRequestIdentify","config","pendding","Promise","resolve","reject","id","promise","createError","message","info","response","removePending","filterResponse","groupCollapsed","options","url","data","groupEnd","filterError","status","complete","code","undefined","error","defaultError","msg"],"mappings":"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"}